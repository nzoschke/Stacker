#!/bin/bash
source stacker.rc

[ $UID -eq 0 ] && [ $# -eq 1 ] && [ -f $1 ] || abort usage: sudo $(basename $0) SCRIPT

SCRIPT=$1
BASE_TARGET=lucid
BASE_TARGET_DIR=$BASE_TARGET-root
TARGET=$(basename ${SCRIPT%.*}) # /vagrant/stacks/cedar-2.0.0.sh => cedar-2.0.0
TARGET_DIR=$TARGET-root
MOUNT_DIR=/mnt/$TARGET

# find or create a base lucid debootstrap
if [ ! -d $BASE_TARGET_DIR ]; then
  display Creating template lucid debootstrap
  (
    apt-get update > /dev/null
    apt-get install -y debootstrap
    debootstrap --variant=minbase lucid $BASE_TARGET_DIR
  ) 2>&1 | indent
fi

# rsync into work dir
display Copying template lucid to target dir
rsync -a --delete $BASE_TARGET_DIR/ $TARGET_DIR/

# chroot and build
display Mounting host in target dir
mount --bind /dev  $TARGET_DIR/dev
mount --bind /proc $TARGET_DIR/proc
mount --bind /tmp  $TARGET_DIR/tmp
function on_exit() {
  umount $TARGET_DIR/dev $TARGET_DIR/proc $TARGET_DIR/tmp 2>&1 | indent
}
trap on_exit EXIT

mkdir -p $TARGET_DIR/tmp/bin/
cp /etc/resolv.conf $TARGET_DIR/etc
cp $BIN_DIR/* $SCRIPT $TARGET_DIR/tmp/bin/
chroot $TARGET_DIR env BASH_ENV=/tmp/bin/stacker.rc bash /tmp/bin/$(basename $SCRIPT)


# display Building inside target
# (
#   cp $SCRIPT $TARGET_DIR/tmp/build.sh
#   chroot $TARGET_DIR /tmp/build.sh
# ) 2>&1 | indent

